- Assignment:
    - __key__: assignment_hello_world
      name: hello_world
      title: "Hello World"
      due_date: 2020-08-01 23:59:59
      description: |+
        <p>En el siguiente ejercicio se introduce el uso Hilos OpenMP para la impresión de una cadena de texto. Cada hilo de ejecucución imprimirá la palabra <i>Hola Mundo #numero-core</i></p>
        <h3>Hilos OpenMP</h3>
        <p>El código fuente que se encuentra a continuación sirve de ejemplo como primer interacción con el cluster <i>kahan</i> y el envío de soluciones a Pizarra.</p>
        <pre>
        <code>
        #include <omp.h>
        #include <math.h>
        #include <stdio.h>
        #include <stdlib.h>

        #include "cputils.h"

        int main (int argc, char *argv[])
        {
          int nthreads, tid;
          double t1 = omp_get_wtime();
          /* Fork a team of threads giving them their own copies of variables */
          #pragma omp parallel private(nthreads, tid)
          {

          /* Obtain thread number */
          tid = omp_get_thread_num();
          printf("Hello World from thread = %d\n", tid);

          /* Only master thread does this */
          if (tid == 0)
            {
            nthreads = omp_get_num_threads();
            printf("Result: number of threads = %d\n", nthreads);
            }

          }  /* All threads join master thread and disband */
          double t2 = omp_get_wtime();
          printf("Time: %f\n", t2-t1 );
        }
        </code>
        </pre>
    - __key__: assignment_openmp_basic
      name: openmp_basic
      due_date: 2020-04-22 23:59:00
      title: "Hybrid MPI/OpenMP"
      description: |+
        <p>#Introduction to Hybrid MPI and OpenMP programs Hybridization is becoming more important as the number of CPU Cores per socket increases. Using less MPI ranks, and more localized parallelism, a reduction in memory footprint per node is often observed, a decrease in communication sensitivity is likely, and is nearly essential for chips moving forward to obtain the most performance at while remaining tunable. Below are some examples which use MPI and OpenMP:</p>

        <h3>Hello World</h3>

        <pre>
        <code class="language-cpp">#include &lt;stdio.h&gt;
        #include &lt;omp.h&gt;
        #include &lt;mpi.h&gt;

        int main(int argc, char *argv[]) {

            int thd_lvl;
            int thd_req = MPI_THREAD_FUNNELED;
            int size,rank;
            int thd_id,thd_sz;

            MPI_Init_thread(&amp;argc, &amp;argv, thd_req, &amp;thd_lvl);
            MPI_Comm_size(MPI_COMM_WORLD,&amp;size);
            MPI_Comm_rank(MPI_COMM_WORLD,&amp;rank);

            #pragma omp parallel private(thd_id,thd_sz)
            {
                thd_id = omp_get_thread_num();
                thd_sz = omp_get_num_threads();
                printf("Hello from process %d / %d, thread %d / %d\n",
                    rank,size,
                    thd_id,thd_sz
                );
            }

            MPI_Finalize();

            return 0;
        }
        </code>
        </pre>
    - __key__: assignment_openmpi_basic
      name: openmpi_basic
      title: "Another Basic OpenMPI example"
      description: |+
        <p><strong>Create:</strong>&nbsp;Using your favorite text editor (vi/vim, emacs, nedit, gedit, nano...) open a new file - call it whatever you&#39;d like.<br />
        It should do the following:</p>
        <ul>
        	<li>Use the appropriate MPI include file</li>
        	<li>Identify task 0 as the &quot;master&quot; task</li>
        	<li>Initialize the MPI environment</li>
        	<li>Get the total number of tasks</li>
        	<li>Get the task&#39;s rank (who it is)</li>
        	<li>Get the name of the processor it is executing on</li>
        	<li>Print a hello message that includes its task rank and processor name</li>
        	<li>Have the master task alone print the total number of tasks</li>
        	<li>Terminate the MPI environment</li>
        </ul>
      start_date: 2020-05-01 00:00:00
      due_date: 2020-06-01 23:59:59
    - __key__: assignment_busqueda_cadena
      name: busqueda_cadena
      title: "Búsqueda de cadenas"
      description: |+
        <p>En esta pr&aacute;ctica vamos a resolver un problema t&iacute;pico de la computaci&oacute;n: la b&uacute;queda de una subcadena dentro de otra. El problema consiste en encontrar en una cadena B de tama&ntilde;o sizeB, una subcadena S de taman&tilde;o sizeS. Si se encuentra esta subcadena, se devuelve la posici&oacute;n de comienzo (startB) de dicha subcadena en B. En caso contrario se devuelve -1.</p>
      expected_result: |+
        Result: 1
      start_date: 2020-05-01 00:00:00
      due_date: 2020-06-01 23:59:59
    - __key__: assignment_primos
      name: primos
      title: "Cálculo de Primos"
      description: |+
        En esta práctica vamos a hacer uso de la paralelización de tareas para resolver un problema habitual en las matemáticas: encontrar números primos.
        <h3>¿Cómo saber si un número natural es primo o compuesto?</h3>
        <p>Es necesario tener en cuenta dos cosas:</p>
        <p>1) Todo número compuesto es divisible por al menos un número primo. Sería incorrecto decir simplemente que un número natural que tiene un divisor primo es un número compuesto, ya que todo número primo tiene un divisor primo que es él mismo. Entonces, teniendo en cuenta esto y el hecho de que el número 1 no tiene ningún divisor primo por debajo y no es ni primo ni compuesto, podemos decir que un número natural distinto de 1 es primo si no tiene ningún divisor primo por debajo.</p>
        <p>2) Con el cuadrado de cada número primo empieza la lista infinita de números compuestos cuyo único divisor primo es ese número primo.</p>
        <p> Este segundo punto nos dice que los cuadrados de los números primos son números importantes que deben ser tenidos en cuenta. Ahora, tengamos en cuenta los dos puntos de arriba, sobre todo el punto dos, para poder elaborar explicaciones que nos permitan llegar a una conclusión
        importante de este tema.</p>
        <h3>Tarea</h3>
        <p>Dado un número entero dado encontrar la cantidad de números primos entre el 1 y ese número.</p>
        <p>Recordad hacer uso de la librería <code>cputils.h</code> y el <code>método omp_get_wtime()</code></p>
        <pre>
        <code>
          #include "cputils.h"

          double t1 = omp_get_wtime();
          / * code */
          double t2 = omp_get_wtime();
          / * impresion resultado */
          printf("Time: %f\n", t2-t1 );
          printf("Result: entre el 1 y el %llu hay %llu numeros primos.\n", N, n);
        </code>
        </pre>
      expected_result: entre el 1 y el 100000000 hay 5761456 numeros primos
      start_date: 2020-04-01 00:00:00
      due_date: 2020-08-01 23:59:59

- Attachment:
    - __key__: attachment_1
      file_location: app/uploads/assignments/4/CadB_1C
      assignment: assignment_busqueda_cadena
    - __key__: attachment_2
      file_location: app/uploads/assignments/4/CadS_5c_1
      assignment: assignment_busqueda_cadena
    - __key__: attachment_3
      file_location: app/uploads/assignments/4/Makefile
      assignment: assignment_busqueda_cadena
    - __key__: attachment_4
      file_location: app/uploads/assignments/4/script.sh
      assignment: assignment_busqueda_cadena
    - __key__: attachment_5
      file_location: app/uploads/assignments/5/script.sh
      assignment: assignment_primos
    - __key__: attachment_6
      file_location: app/uploads/assignments/5/Makefile
      assignment: assignment_primos
    - __key__: attachment_7
      file_location: app/uploads/assignments/1/script.sh
      assignment: assignment_hello_world
    - __key__: attachment_8
      file_location: app/uploads/assignments/1/Makefile
      assignment: assignment_hello_world


- Role:
    - __key__: users
      name: "users"
      description: "Users of the system"
    - __key__: admins
      name: "admins"
      description: "Administrators of the system"

- Team:
    - __key__: team_foo
      name: "Zootopia"
    - __key__: team_bar
      name: "bar"
    - __key__: team_uvas
      name: "UP uvas"
    - __key__: team_flogger
      name: "Flogger"
    - __key__: team_morse
      name: "Morse"
    - __key__: team_paralelo
      name: "Paralelo"

- Badge:
    - __key__: badge_flash
      name: "badge_flash"
      title: "Flash!!"
      subtitle: "Fastest pal of the block"
      description: "Earn when finishing an Assignment first of your Group"
      background_color: "bg-aqua-active"
      image: "badge-flash-128x128.png"
      assignments: [assignment_openmp_basic, assignment_openmpi_basic, assignment_busqueda_cadena]
    - __key__: badge_first_place
      name: "first_place"
      title: "First Place"
      subtitle: "Number one!"
      description: "Earn when your solution is the fastest of your Group"
      rule: "status.position == 1 and status.executed_successfully == true"
      points: 150
      background_color: "bg-maroon-active"
      image: "badge-number-one-128x128.png"
      assignments: [assignment_openmpi_basic, assignment_primos, assignment_busqueda_cadena]
    - __key__: badge_beat_the_machine
      name: "beat_the_machine"
      title: "Beat the machine"
      subtitle: "Damn! you are fast"
      description: "Earn when your program runs below a certain threshold"
      rule: "request.run_time < 40 and status.executed_successfully == true"
      points: 75
      background_color: "bg-navy-active"
      image: "badge-beat-the-machine-256x256.png"
      assignments: [assignment_openmp_basic, assignment_primos]
    - __key__: badge_bingo
      name: "bingo"
      title: "Bingo"
      subtitle: "Lucky Winnter"
      description: "Earn when you Request is number #2"
      rule: "request.id == 2"
      points: 50
      secret: True
      background_color: "bg-navy-active"
      image: "badge-bingo-256x256.png"
      assignments: [assignment_hello_world]
    - __key__: badge_hello_world
      name: "badge_hello_world"
      title: "Hello World!!"
      subtitle: "Welcome to Pizarra"
      description: "Your first correct execution of code in the cluster"
      rule: "status.executed_successfully == true"
      points: 50
      background_color: "bg-aqua-active"
      image: "badge-hello-world-256x256.png"
      assignments: [assignment_hello_world]

- ClassGroup:
    - __key__: class_a
      name: "G2019-A1"
      description: "Grupo CPA 2019 A1"
      assignments: [assignment_hello_world, assignment_primos, assignment_busqueda_cadena]
    - __key__: class_b
      name: "G2019-B1"
      description: "Grupo LPP 2019 B1"
      assignments: [assignment_hello_world, assignment_openmpi_basic]
    - __key__: class_c
      name: "G2019-C1"
      description: "Class from 2019 C1 group"
      assignments: [assignment_hello_world, assignment_openmpi_basic]
    - __key__: class_d
      name: "G2019-D1"
      description: "Class LPP from 2019 D1 group"
      assignments: [assignment_hello_world, assignment_openmpi_basic]
    - __key__: class_e
      name: "G2019-E1"
      description: "Grup LPP 2019 E1 group"
      assignments: [assignment_hello_world, assignment_openmpi_basic]


- User:
    - __key__: user_admin
      username: "admin"
      email: "nmartini@upv.es"
      name: "Joan Miró"
      password: "123"
      access_token: "123"
      avatar: "avatar-default-128x128.jpg"
      quota: 9999
      roles: [admins]
    - __key__: user_foo
      username: "nmartini"
      email: "nimar3@inf.upv.es"
      name: "Nicolás Martini"
      password: "foo"
      access_token: "123"
      quota_used: 0
      roles: [users]
      classgroup: class_a
      team: team_foo
      registered_at: 2020-01-01 09:00:00
    - __key__: user_bar
      username: "bar"
      email: "bar@test.test"
      name: "Francisco de Goya"
      password: "bar"
      roles: [users]
      classgroup: class_a
    - __key__: user_test
      username: "salvador.dali"
      email: "salvador.dali@test.test"
      name: "Salvador Dalí"
      password: "test"
      roles: [users]
      classgroup: class_a
      team: team_foo


# BULK DATA
- User:
    - __key__: alberto_barcia_rincon
      email: alberto.barcia.rincon@upv.es
      name: Alberto Barcia Rincon
      quota_used: 600
      points: 130
      classgroup: class_a
      roles: [users]
      team: team_flogger
    - __key__: lucia_garcia_candela
      email: lucia.garcia.candela@upv.es
      name: Lucia Garcia Candela
      quota_used: 600
      points: 150
      classgroup: class_a
      roles: [users]
    - __key__: javier_perez_callejas
      email: javier.perez.callejas@upv.es
      name: Javier Perez Callejas
      quota_used: 600
      points: 120
      classgroup: class_a
      roles: [users]
      team: team_paralelo
    - __key__: marina_cabrera_martin
      email: marina.cabrera.martin@upv.es
      name: Marina Cabrera Martin
      quota_used: 600
      points: 150
      classgroup: class_a
      roles: [users]
      team: team_uvas
    - __key__: monica_ruiz_gascon
      email: monica.ruiz.gascon@upv.es
      name: Monica Ruiz Gascon
      quota_used: 600
      points: 80
      classgroup: class_a
      roles: [users]
      team: team_bar
    - __key__: francisco_jose_ruiz_carmona
      email: francisco.jose.ruiz.carmona@upv.es
      name: Francisco Jose Ruiz Carmona
      quota_used: 600
      points: 150
      classgroup: class_a
      roles: [users]
      team: team_morse
    - __key__: juan_antonio_rodriguez_perales
      email: juan.antonio.rodriguez.perales@upv.es
      name: Juan Antonio Rodriguez Perales
      quota_used: 600
      points: 70
      classgroup: class_a
      roles: [users]
      team: team_flogger
    - __key__: rosa_recio_santana
      email: rosa.recio.santana@upv.es
      name: Rosa Recio Santana
      quota_used: 600
      points: 150
      classgroup: class_a
      roles: [users]
      team: team_uvas
    - __key__: ana_hernandez_prieto
      email: ana.hernandez.prieto@upv.es
      name: Ana Hernandez Prieto
      quota_used: 600
      points: 150
      classgroup: class_a
      roles: [users]
      team: team_morse
    - __key__: maria_carmen_hernandez_sanchez
      email: maria.carmen.hernandez.sanchez@upv.es
      name: Maria Carmen Hernandez Sanchez
      quota_used: 600
      points: 200
      classgroup: class_a
      roles: [users]
      team: team_bar
    - __key__: jose_luis_izquierdo_arjona
      email: jose.luis.izquierdo.arjona@upv.es
      name: Jose Luis Izquierdo Arjona
      quota_used: 600
      points: 150
      classgroup: class_a
      roles: [users]
      team: team_paralelo
    - __key__: maria_teresa_fernandez_ochoa
      email: maria.teresa.fernandez.ochoa@upv.es
      name: Maria Teresa Fernandez Ochoa
      quota_used: 600
      points: 150
      classgroup: class_b
      roles: [users]
      team: team_bar
    - __key__: maria_angeles_lozano_caceres
      email: maria.angeles.lozano.caceres@upv.es
      name: Maria Ángeles Lozano Caceres
      quota_used: 600
      points: 30
      classgroup: class_b
      roles: [users]
    - __key__: ana_del_moral_molina
      email: ana.del.moral.molina@upv.es
      name: Ana Del Moral Molina
      quota_used: 600
      points: 150
      classgroup: class_b
      roles: [users]
    - __key__: pedro_acosta_lopez
      email: pedro.acosta.lopez@upv.es
      name: Pedro Acosta Lopez
      quota_used: 600
      points: 150
      classgroup: class_b
      roles: [users]
    - __key__: luis_garcia_gomez
      email: luis.garcia.gomez@upv.es
      name: Luis Garcia Gomez
      quota_used: 600
      points: 150
      classgroup: class_b
      roles: [users]
    - __key__: ana_jimenez_valverde
      email: ana.jimenez.valverde@upv.es
      name: Ana Jimenez Valverde
      quota_used: 600
      points: 150
      classgroup: class_b
      roles: [users]
    - __key__: jose_ortuno_ruiz
      email: jose.ortuno.ruiz@upv.es
      name: Jose Ortuño Ruiz
      quota_used: 600
      points: 150
      classgroup: class_b
      roles: [users]
    - __key__: maria_isabel_salamanca_vazquez
      email: maria.isabel.salamanca.vazquez@upv.es
      name: Maria Isabel Salamanca Vazquez
      quota_used: 600
      points: 45
      classgroup: class_b
      roles: [users]
    - __key__: antonio_jimenez_porras
      email: antonio.jimenez.porras@upv.es
      name: Antonio Jimenez Porras
      quota_used: 600
      points: 150
      classgroup: class_b
      roles: [users]
    - __key__: josefa_medina_quintero
      email: josefa.medina.quintero@upv.es
      name: Josefa Medina Quintero
      quota_used: 600
      points: 150
      classgroup: class_b
      roles: [users]
    - __key__: angela_ortiz_zamora
      email: angela.ortiz.zamora@upv.es
      name: Ángela Ortiz Zamora
      quota_used: 600
      points: 100
      classgroup: class_b
      roles: [users]
    - __key__: josep_lopez_ugarte
      email: josep.lopez.ugarte@upv.es
      name: Josep Lopez Ugarte
      quota_used: 600
      points: 150
      classgroup: class_b
      roles: [users]
    - __key__: carmen_artero_codina
      email: carmen.artero.codina@upv.es
      name: Carmen Artero Codina
      quota_used: 600
      points: 100
      classgroup: class_b
      roles: [users]
    - __key__: iratxe_gonzalez_crespo
      email: iratxe.gonzalez.crespo@upv.es
      name: Iratxe Gonzalez Crespo
      quota_used: 600
      points: 110
      classgroup: class_b
      roles: [users]
    - __key__: maria_gonzalez_garcia
      email: maria.gonzalez.garcia@upv.es
      name: Maria Gonzalez Garcia
      quota_used: 600
      points: 150
      classgroup: class_c
      roles: [users]
    - __key__: pablo_martin_gutierrez
      email: pablo.martin.gutierrez@upv.es
      name: Pablo Martin Gutierrez
      quota_used: 600
      points: 150
      classgroup: class_c
      roles: [users]
    - __key__: alvaro_gil_melgar
      email: alvaro.gil.melgar@upv.es
      name: Álvaro Gil Melgar
      quota_used: 600
      points: 150
      classgroup: class_c
      roles: [users]
    - __key__: maria_romero_pinto
      email: maria.romero.pinto@upv.es
      name: Maria Romero Pinto
      quota_used: 600
      points: 150
      classgroup: class_c
      roles: [users]

- Request:
    - __key__: request_1
      user: alberto_barcia_rincon
      assignment: assignment_primos
      points: 110
      status: "FINISHED"
      run_time: 47.12
    - __key__: request_2
      user: lucia_garcia_candela
      assignment: assignment_primos
      points: 100
      status: "FINISHED"
      run_time: 125.134
    - __key__: request_3
      user: javier_perez_callejas
      assignment: assignment_primos
      points: 100
      status: "FINISHED"
      run_time: 52.43
    - __key__: request_4
      user: marina_cabrera_martin
      assignment: assignment_primos
      points: 100
      status: "FINISHED"
      run_time: 40.98
    - __key__: request_5
      user: monica_ruiz_gascon
      assignment: assignment_primos
      points: 100
      status: "FINISHED"
      run_time: 45.433
    - __key__: request_6
      user: francisco_jose_ruiz_carmona
      assignment: assignment_primos
      points: 100
      status: "FINISHED"
      run_time: 38.2331
    - __key__: request_7
      user: alberto_barcia_rincon
      assignment: assignment_hello_world
      points: 110
      status: "FINISHED"
      run_time: 0.912
    - __key__: request_8
      user: lucia_garcia_candela
      assignment: assignment_hello_world
      points: 100
      status: "FINISHED"
      run_time: 1.9134
    - __key__: request_9
      user: javier_perez_callejas
      assignment: assignment_hello_world
      points: 100
      status: "FINISHED"
      run_time: 0.943
    - __key__: request_10
      user: marina_cabrera_martin
      assignment: assignment_hello_world
      points: 100
      status: "FINISHED"
      run_time: 0.998
    - __key__: request_11
      user: monica_ruiz_gascon
      assignment: assignment_hello_world
      points: 100
      status: "FINISHED"
      run_time: 0.9433
    - __key__: request_12
      user: francisco_jose_ruiz_carmona
      assignment: assignment_hello_world
      points: 100
      status: "FINISHED"
      run_time: 0.92331


- LeaderBoard:
    - __key__: leaderboard_1
      user: alberto_barcia_rincon
      assignment: assignment_primos
      request: request_1
      classgroup: class_a
      run_time: 47.12
    - __key__: leaderboard_2
      user: lucia_garcia_candela
      assignment: assignment_primos
      request: request_2
      classgroup: class_a
      run_time: 125.134
    - __key__: leaderboard_3
      user: javier_perez_callejas
      assignment: assignment_primos
      request: request_3
      classgroup: class_a
      run_time: 52.43
    - __key__: leaderboard_4
      user: marina_cabrera_martin
      assignment: assignment_primos
      request: request_4
      classgroup: class_a
      run_time: 40.98
    - __key__: leaderboard_5
      user: monica_ruiz_gascon
      assignment: assignment_primos
      request: request_5
      classgroup: class_a
      run_time: 45.433
    - __key__: leaderboard_6
      user: francisco_jose_ruiz_carmona
      assignment: assignment_primos
      request: request_6
      classgroup: class_a
      run_time: 38.2331
    - __key__: leaderboard_7
      user: alberto_barcia_rincon
      assignment: assignment_hello_world
      request: request_7
      classgroup: class_a
      run_time: 0.12
    - __key__: leaderboard_8
      user: lucia_garcia_candela
      assignment: assignment_hello_world
      request: request_8
      classgroup: class_a
      run_time: 0.134
    - __key__: leaderboard_9
      user: javier_perez_callejas
      assignment: assignment_hello_world
      request: request_9
      classgroup: class_a
      run_time: 0.43
    - __key__: leaderboard_10
      user: marina_cabrera_martin
      assignment: assignment_hello_world
      request: request_10
      classgroup: class_a
      run_time: 0.98
    - __key__: leaderboard_11
      user: monica_ruiz_gascon
      assignment: assignment_hello_world
      request: request_11
      classgroup: class_a
      run_time: 0.433
    - __key__: leaderboard_12
      user: francisco_jose_ruiz_carmona
      assignment: assignment_hello_world
      request: request_12
      classgroup: class_a
      run_time: 0.2331
